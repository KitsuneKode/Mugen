// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @unique @default(autoincrement())
  name      String
  password  String
  email     String    @unique
  Contents  Content[]
  Tags      Tag[]     @relation("UserTags")
  Brains    Brain[]
  avatarId  Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Chats     Chat[]

  @@index([id])
}

model Content {
  id        Int         @id @unique @default(autoincrement())
  type      ContentType
  title     String
  link      String
  Tags      Tag[]       @relation("ContentTags")
  userId    Int
  user      User        @relation(fields: [userId], references: [id])
  Brains    Brain[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  @@index([id])
}

model Tag {
  id        Int       @id @unique @default(autoincrement())
  tag       String    @unique
  Contents  Content[] @relation("ContentTags")
  Users     User[]    @relation("UserTags")
  Brains    Brain[]   @relation("BrainTags")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Chat      Chat[]    @relation("ChatTags")

  @@index([tag])
}

model Brain {
  id          Int       @id @unique @default(autoincrement())
  userId      Int
  name        String
  share       Boolean   @default(false)
  description String
  user        User      @relation(fields: [userId], references: [id])
  Contents    Content[]
  stars       Int       @default(0)
  Link        Link?
  Tags        Tag[]     @relation("BrainTags")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([share, id, userId])
}

model Link {
  id        Int      @id @unique @default(autoincrement())
  hash      String   @unique
  brainId   Int      @unique
  Brain     Brain    @relation(fields: [brainId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([brainId, hash])
}

model Chat {
  id        Int      @id @unique @default(autoincrement())
  name      String
  messages  String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tags      Tag[]    @relation("ChatTags")
  userId    Int
  user      User     @relation(fields: [userId], references: [id])

  @@index([userId, id])
}

enum ContentType {
  image
  article
  instagram
  audio
  twitter
  reddit
  youtube
  embed_link
  other
}
