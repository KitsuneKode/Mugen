FROM node:22-alpine AS base

ARG DATABASE_URL
ARG UPSTASH_REDIS_REST_URL
ARG UPSTASH_REDIS_REST_TOKEN
ARG UPSTASH_VECTOR_REST_URL
ARG UPSTASH_VECTOR_REST_TOKEN

ENV DATABASE_URL=${DATABASE_URL}
ENV UPSTASH_REDIS_REST_URL=${UPSTASH_REDIS_REST_URL}
ENV UPSTASH_REDIS_REST_TOKEN=${UPSTASH_REDIS_REST_TOKEN}
ENV UPSTASH_VECTOR_REST_URL=${UPSTASH_VECTOR_REST_URL}
ENV UPSTASH_VECTOR_REST_TOKEN=${UPSTASH_VECTOR_REST_TOKEN}
ENV NODE_ENV=production

RUN echo "DATABASE_URL: ${DATABASE_URL}" \
  && echo "UPSTASH_REDIS_REST_URL: ${UPSTASH_REDIS_REST_URL}" \
  && echo "UPSTASH_REDIS_REST_TOKEN: ${UPSTASH_REDIS_REST_TOKEN}" \
  && echo "UPSTASH_VECTOR_REST_URL: ${UPSTASH_VECTOR_REST_URL}" \
  && echo "UPSTASH_VECTOR_REST_TOKEN: ${UPSTASH_VECTOR_REST_TOKEN}"

FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /usr/src/app


# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /usr/src/app
COPY . .

RUN npm install -g pnpm \
  && pnpm install \
  && pnpm add sharp \ 
  && pnpm build

FROM base AS runner
WORKDIR /usr/src/app


RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

COPY --from=builder /usr/src/app/public ./public
COPY --from=builder --chown=nextjs:nodejs /usr/src/app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /usr/src/app/.next/static ./.next/static

USER nextjs
EXPOSE 3000

ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

CMD ["node", "server.js"]
